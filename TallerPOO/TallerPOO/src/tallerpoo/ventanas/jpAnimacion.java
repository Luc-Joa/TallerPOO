/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tallerpoo.ventanas;

import TallerPoo.TallerPOO;
import java.awt.Color;
import java.awt.Graphics;

/**
 *
 * @author ACU
 */
public class jpAnimacion extends javax.swing.JPanel implements Runnable {

    private int dir;
    private final int vel = 1;
    double x = 100;
    double y = 100;
    int p=0;
    Thread hilo = new Thread(this);
    Graphics[] g1 = new Graphics[TallerPOO.getPersona().size()];
    /**
     * Creates new form jlAnimacion
     */
    public jpAnimacion() {
        initComponents();
    }

    @Override
    public void paint(Graphics g) {
        
        g.fillRect(0, 0, getWidth(), getHeight());
        g.setColor(Color.DARK_GRAY);
        for (int i = 0; i < g1.length; i++) {
            g1[i] = g;
            g1[i].fillOval((int) (x * Math.random()), (int) (y * Math.random()), 10, 10);
            g1[i].setColor(Color.green);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public void mover(int dir) {
        switch (dir) {
            case 0:
                y += vel;
                break;
            case 1:
                y -= vel;
                break;
            case 2:
                x += vel;
                break;
            case 3:
                x -= vel;
                break;
            case 4:
                x += vel;
                y += vel;
                break;
            case 5:
                x -= vel;
                y -= vel;
                break;
            case 6:
                x += vel;
                y -= vel;
                break;
            case 7:
                x -= vel;
                y += vel;
                break;
            default:
                break;
        }
    }

    public void rebotar() {
        if (y <= 0) {
            int nr = (int) (Math.random() * 3) + 1;
            dir = nr == 1 ? 7 : nr == 2 ? 0 : 4;
        }
        if (x <= 0) {
            int nr = (int) (Math.random() * 3) + 1;
            dir = nr == 1 ? 2 : nr == 2 ? 6 : 4;
        }
        if (x <= 0 && y <= 0) {
            int nr = (int) (Math.random() * 3) + 1;
            dir = nr == 1 ? 0 : nr == 2 ? 2 : 4;
        }
        if (x >= getWidth()) {
            int nr = (int) (Math.random() * 3) + 1;
            dir = nr == 1 ? 5 : nr == 2 ? 7 : 3;
        }
        if (y >= getHeight()) {
            int nr = (int) (Math.random() * 3) + 1;
            dir = nr == 1 ? 6 : nr == 2 ? 1 : 5;
        }
    }

    public void Iniciar() {
        hilo.start();
    }
    public void Pausar(){
        hilo.stop();
    }
    @Override
    public void run() {
        
        dir = ((int) (Math.random() * 7));

        try {
            while (true) {
                rebotar();
                Thread.sleep(60);
                mover(dir);
                repaint();
            }
        } catch (Exception e) {
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
